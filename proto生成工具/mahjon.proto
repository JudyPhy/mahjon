package pb;

/////////////////////////////////////////////////////////////
// define types

enum GameType
{
	XueZhan = 1;
    XueLiu = 2;	
	DouDiZhu = 3;
}

enum EnterMode
{
	CreateRoom = 1;
    JoinRoom = 2;	
	QuickEnter = 3;
}

enum MahjonSide
{
	DEFAULT = 1;
	EAST = 2;
	SOUTH = 3;
	WEST = 4;
	NORTH = 5;
}

enum CardStatus
{
	Wall = 1;
	InHand = 2;
	P = 3;
	G = 4;
	Dis = 5;
	Deal = 6;
	Hu = 7;
}

enum ExchangeType
{
	ClockWise = 1;
	AntiClock = 2;
	Opposite = 3;
}

enum CardType
{
	Default = 1;
	Wan = 2;
	Tiao = 3;
	Tong = 4;
}

message LackCard
{
	required int32 playerOID = 1;
	required CardType type = 2;
}

enum ProcType
{
	SelfHu = 1;
	SelfGang = 2;
	HuOther = 3;
	GangOther = 4;
	Peng = 5;
	Discard = 6;	
	Pass = 7;
}

enum TurnSwitchType
{	
	Normal = 1;
	JustCanDiscard = 2;
	NotDrawCard = 3;
}

message CardInfo
{
	required int32 playerOID = 1;
	required int32 OID = 2;
	required int32 ID = 3;
	required CardStatus Status = 4;
	optional bool fromOther = 5;
}

message PlayerInfo
{
	required int32 OID = 1;
	required string NickName = 2;
	required string HeadIcon = 3;
	required int32 Gold = 4;
	required int32 Diamond = 5;
	optional MahjonSide Side = 6;
	optional bool IsOwner = 7;
}

message GameOverInfo
{
	required PlayerInfo player = 1;
	required int32 fan = 2;
	repeated CardInfo cardList = 3;
}

/////////////////////////////////////////////////////////////////////
message C2GSLogin
{
	required string account = 1;
    required string password = 2;
}

message GS2CLoginRet
{
	enum ErrorCode
	{
		SUCCESS = 1;
		ACCOUNT_ERROR = 2;
		PASSWORD_ERROR = 3;
		FAIL = 4;
	}
	required ErrorCode errorCode = 1;
	optional PlayerInfo playerInfo = 2;
}

message C2GSEnterGame
{
	required GameType type = 1;
    required EnterMode mode = 2;
	optional string roomId = 3;	
}

message GS2CEnterGameRet
{
	enum ErrorCode{
		SUCCESS = 1; 
		FAIL = 2;
		PLAYER_COUNT_LIMITE = 3; 
		ROOM_NOT_EXIST = 4;
		NO_EMPTY_ROOM = 5;
	}
    required ErrorCode errorCode = 1;
	required GameType type = 2;
	optional string roomId = 3;
}

message GS2CUpdateRoomMember
{
    repeated PlayerInfo player = 1;
}

message GS2CBattleStart
{
	required int32 dealerId = 1;
	repeated CardInfo cardList = 2;
}

message C2GSExchangeCard
{	
	repeated int32 cardOIDList = 1;
}

message GS2CExchangeCardRet
{
	required ExchangeType type = 1;
    repeated CardInfo cardList = 2;
}

message C2GSSelectLack
{	
	required CardType type = 1;
}

message GS2CSelectLackRet
{
	repeated LackCard lackCard = 1;
}

message GS2CTurnToNext
{
	required int32 playerOID = 1;
	required TurnSwitchType type = 2;
	optional CardInfo drawCard = 3;
}

message GS2CPlayerProc
{
	required int32 procPlayer = 1;
	required ProcType procType = 2;
	optional int32 beProcPlayer = 3;
	optional int32 procCardId = 4;
}

message C2GSPlayerProcRet
{
	required ProcType procType = 1;
	optional int32 procCardId = 2;
}

message GS2CPlayProcAni
{	
	required int32 procPlayer = 1;
	required ProcType procType = 2;
	repeated CardInfo cardList = 3;
}

message GS2CGameOver
{
	repeated GameOverInfo list = 1;
}




